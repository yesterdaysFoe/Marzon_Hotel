package gui;

import connection.DbConf;
import controllers.UserJpaController;
import controllers.exceptions.NonexistentEntityException;
import entities.User;
import java.awt.Cursor;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.SwingWorker;
import utils.Messages;

/**
 *
 * @author David Daniel Kurtz <daviddanielkurtz@gmail.com>
 */
public class LoginForm extends javax.swing.JDialog {

    private Task task;
    private static LoginForm instance;

    private LoginForm(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        jProgressBar2.setMaximum(10);
        jProgressBar2.setMinimum(1);
    }

    public static LoginForm getInstance() {
        if (instance == null) {
            synchronized (HotelMain.class) {
                if (instance == null) {
                    instance = new LoginForm(HotelMain.getInstance(), true);
                }
            }
        }
        return instance;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jPasswordField1 = new javax.swing.JPasswordField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jProgressBar2 = new javax.swing.JProgressBar();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setBounds(new java.awt.Rectangle(0, 0, 635, 350));

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel1.setText("Username:");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(330, 110, 80, 22);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel2.setText("Password:");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(330, 140, 80, 22);

        jTextField1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jPanel1.add(jTextField1);
        jTextField1.setBounds(410, 110, 200, 21);

        jPasswordField1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jPasswordField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPasswordField1ActionPerformed(evt);
            }
        });
        jPanel1.add(jPasswordField1);
        jPasswordField1.setBounds(410, 140, 200, 21);

        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton1.setText("Login");
        jButton1.setMargin(new java.awt.Insets(2, 0, 2, 0));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(497, 200, 90, 30);

        jButton2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton2.setText("Cancel");
        jButton2.setMargin(new java.awt.Insets(2, 0, 2, 0));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);
        jButton2.setBounds(390, 200, 90, 30);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/gui.jpg"))); // NOI18N
        jPanel1.add(jLabel4);
        jLabel4.setBounds(0, 0, 630, 270);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        jPanel2.setBackground(new java.awt.Color(102, 102, 102));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setPreferredSize(new java.awt.Dimension(256, 55));
        jPanel2.setLayout(null);

        jProgressBar2.setStringPainted(true);
        jPanel2.add(jProgressBar2);
        jProgressBar2.setBounds(12, 10, 600, 32);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/loginline.jpg"))); // NOI18N
        jPanel2.add(jLabel3);
        jLabel3.setBounds(0, -10, 630, 70);

        getContentPane().add(jPanel2, java.awt.BorderLayout.SOUTH);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        task = new Task();
        task.execute();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jPasswordField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPasswordField1ActionPerformed
        jButton1.doClick();
    }//GEN-LAST:event_jPasswordField1ActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JProgressBar jProgressBar2;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

    private void updateProgressBar(int count, String message) {
        jProgressBar2.setValue(count);
        jProgressBar2.setString(message);
    }

    private void performVerification() {
        jButton1.setEnabled(false);
        try {
            Thread.sleep(500);
            updateProgressBar(6, "Connecting to server...");
            compareUsernameInDb();
        } catch (InterruptedException | NonexistentEntityException ex) {
            updateProgressBar(0, "");
            Logger.getLogger(LoginForm.class.getName()).log(Level.SEVERE, null, ex);
            Messages.showErrorMessage(this, ex.getMessage());
        } catch (Exception ex) {
            Logger.getLogger(LoginForm.class.getName()).log(Level.SEVERE, null, ex);
            Messages.showErrorMessage(this, ex.getMessage());
        }
    }

    private void compareUsernameInDb() throws NonexistentEntityException, InterruptedException, Exception {
        User ua = new UserJpaController(DbConf.getInstance()).findByUsername(jTextField1.getText().trim());
        updateProgressBar(8, "Database connection success...");
        Thread.sleep(500);
        updateProgressBar(9, "Verifiying password...");
        Thread.sleep(500);
        verifyPassword(ua);
    }

    private void verifyPassword(User user) {
        if (user.getPassword() != null && user.getUsername() != null) {
            if (user.getPassword().equals(new String(jPasswordField1.getPassword()))) {
                if (user.getActive()) {
                    UserUtil.setUser(user);
                    HotelMain.getInstance().initUser();
                    updateProgressBar(0, "");
                    jTextField1.setText(null);
                    jPasswordField1.setText(null);
                    this.setVisible(false);
                    this.dispose();
//                    Messages.showSuccessMessage(this, "Successfully Logged in as " + user.getUsername());
                } else {
                    updateProgressBar(0, "");
                    Messages.showErrorMessage(this, "Username is no longer active");
                }
            } else {
                updateProgressBar(0, "");
                Messages.showErrorMessage(this, "Incorrect password.");
            }
        }
    }

    class Task extends SwingWorker<Void, Void> {

        @Override
        protected Void doInBackground() throws Exception {
            setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            jProgressBar2.setValue(3);
            performVerification();
            return null;
        }

        @Override
        protected void done() {
            setCursor(Cursor.getDefaultCursor());
            jButton1.setEnabled(true);
            super.done();
        }
    }
}
